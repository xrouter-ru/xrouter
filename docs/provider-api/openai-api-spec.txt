Chat
Given a list of messages comprising a conversation, the model will return a response. Related guide: Chat Completions

Create chat completion
post
 
https://api.openai.com/v1/chat/completions
Creates a model response for the given chat conversation. Learn more in the text generation, vision, and audio guides.

Parameter support can differ depending on the model used to generate the response, particularly for newer reasoning models. Parameters that are only supported for reasoning models are noted below. For the current state of unsupported parameters in reasoning models, refer to the reasoning guide.

Request body
messages
array

Required
A list of messages comprising the conversation so far. Depending on the model you use, different message types (modalities) are supported, like text, images, and audio.


Hide possible types
Developer message
object
Developer-provided instructions that the model should follow, regardless of messages sent by the user. With o1 models and newer, developer messages replace the previous system messages.


Hide properties
content
string or array

Required
The contents of the developer message.

role
string

Required
The role of the messages author, in this case developer.

name
string

Optional
An optional name for the participant. Provides the model information to differentiate between participants of the same role.

System message
object
Developer-provided instructions that the model should follow, regardless of messages sent by the user. With o1 models and newer, use developer messages for this purpose instead.


Hide properties
content
string or array

Required
The contents of the system message.

role
string

Required
The role of the messages author, in this case system.

name
string

Optional
An optional name for the participant. Provides the model information to differentiate between participants of the same role.

User message
object
Messages sent by an end user, containing prompts or additional context information.


Hide properties
content
string or array

Required
The contents of the user message.


Hide possible types
Text content
string
The text contents of the message.

Array of content parts
array
An array of content parts with a defined type. Supported options differ based on the model being used to generate the response. Can contain text, image, or audio inputs.


Hide possible types
Text content part
object
Learn about text inputs.


Hide properties
type
string

Required
The type of the content part.

text
string

Required
The text content.

Image content part
object
Learn about image inputs.


Hide properties
type
string

Required
The type of the content part.

image_url
object

Required

Hide properties
url
string

Required
Either a URL of the image or the base64 encoded image data.

detail
string

Optional
Defaults to auto
Specifies the detail level of the image. Learn more in the Vision guide.

Audio content part
object
Learn about audio inputs.


Hide properties
type
string

Required
The type of the content part. Always input_audio.

input_audio
object

Required

Hide properties
data
string

Required
Base64 encoded audio data.

format
string

Required
The format of the encoded audio data. Currently supports "wav" and "mp3".

role
string

Required
The role of the messages author, in this case user.

name
string

Optional
An optional name for the participant. Provides the model information to differentiate between participants of the same role.

Assistant message
object
Messages sent by the model in response to user messages.


Hide properties
content
string or array

Optional
The contents of the assistant message. Required unless tool_calls or function_call is specified.


Hide possible types
Text content
string
The contents of the assistant message.

Array of content parts
array
An array of content parts with a defined type. Can be one or more of type text, or exactly one of type refusal.


Hide possible types
Text content part
object
Learn about text inputs.


Hide properties
type
string

Required
The type of the content part.

text
string

Required
The text content.

Refusal content part
object

Hide properties
type
string

Required
The type of the content part.

refusal
string

Required
The refusal message generated by the model.

refusal
string or null

Optional
The refusal message by the assistant.

role
string

Required
The role of the messages author, in this case assistant.

name
string

Optional
An optional name for the participant. Provides the model information to differentiate between participants of the same role.

audio
object or null

Optional
Data about a previous audio response from the model. Learn more.


Hide properties
id
string

Required
Unique identifier for a previous audio response from the model.

tool_calls
array

Optional
The tool calls generated by the model, such as function calls.


Hide properties
id
string

Required
The ID of the tool call.

type
string

Required
The type of the tool. Currently, only function is supported.

function
object

Required
The function that the model called.


Hide properties
name
string

Required
The name of the function to call.

arguments
string

Required
The arguments to call the function with, as generated by the model in JSON format. Note that the model does not always generate valid JSON, and may hallucinate parameters not defined by your function schema. Validate the arguments in your code before calling your function.

function_call
Deprecated
object or null

Optional
Deprecated and replaced by tool_calls. The name and arguments of a function that should be called, as generated by the model.


Hide properties
arguments
string

Required
The arguments to call the function with, as generated by the model in JSON format. Note that the model does not always generate valid JSON, and may hallucinate parameters not defined by your function schema. Validate the arguments in your code before calling your function.

name
string

Required
The name of the function to call.

Tool message
object

Hide properties
role
string

Required
The role of the messages author, in this case tool.

content
string or array

Required
The contents of the tool message.

tool_call_id
string

Required
Tool call that this message is responding to.

Function message
object
Deprecated

Hide properties
role
string

Required
The role of the messages author, in this case function.

content
string or null

Required
The contents of the function message.

name
string

Required
The name of the function to call.

model
string

Required
ID of the model to use. See the model endpoint compatibility table for details on which models work with the Chat API.

store
boolean or null

Optional
Defaults to false
Whether or not to store the output of this chat completion request for use in our model distillation or evals products.

reasoning_effort
string

Optional
Defaults to medium
o1 models only

Constrains effort on reasoning for reasoning models. Currently supported values are low, medium, and high. Reducing reasoning effort can result in faster responses and fewer tokens used on reasoning in a response.

metadata
object or null

Optional
Developer-defined tags and values used for filtering completions in the dashboard.

frequency_penalty
number or null

Optional
Defaults to 0
Number between -2.0 and 2.0. Positive values penalize new tokens based on their existing frequency in the text so far, decreasing the model's likelihood to repeat the same line verbatim.

logit_bias
map

Optional
Defaults to null
Modify the likelihood of specified tokens appearing in the completion.

Accepts a JSON object that maps tokens (specified by their token ID in the tokenizer) to an associated bias value from -100 to 100. Mathematically, the bias is added to the logits generated by the model prior to sampling. The exact effect will vary per model, but values between -1 and 1 should decrease or increase likelihood of selection; values like -100 or 100 should result in a ban or exclusive selection of the relevant token.

logprobs
boolean or null

Optional
Defaults to false
Whether to return log probabilities of the output tokens or not. If true, returns the log probabilities of each output token returned in the content of message.

top_logprobs
integer or null

Optional
An integer between 0 and 20 specifying the number of most likely tokens to return at each token position, each with an associated log probability. logprobs must be set to true if this parameter is used.

max_tokens
Deprecated
integer or null

Optional
The maximum number of tokens that can be generated in the chat completion. This value can be used to control costs for text generated via API.

This value is now deprecated in favor of max_completion_tokens, and is not compatible with o1 series models.

max_completion_tokens
integer or null

Optional
An upper bound for the number of tokens that can be generated for a completion, including visible output tokens and reasoning tokens.

n
integer or null

Optional
Defaults to 1
How many chat completion choices to generate for each input message. Note that you will be charged based on the number of generated tokens across all of the choices. Keep n as 1 to minimize costs.

modalities
array or null

Optional
Output types that you would like the model to generate for this request. Most models are capable of generating text, which is the default:

["text"]

The gpt-4o-audio-preview model can also be used to generate audio. To request that this model generate both text and audio responses, you can use:

["text", "audio"]

prediction
object

Optional
Configuration for a Predicted Output, which can greatly improve response times when large parts of the model response are known ahead of time. This is most common when you are regenerating a file with only minor changes to most of the content.


Hide possible types
Static Content
object
Static predicted output content, such as the content of a text file that is being regenerated.


Hide properties
type
string

Required
The type of the predicted content you want to provide. This type is currently always content.

content
string or array

Required
The content that should be matched when generating a model response. If generated tokens would match this content, the entire model response can be returned much more quickly.


Hide possible types
Text content
string
The content used for a Predicted Output. This is often the text of a file you are regenerating with minor changes.

Array of content parts
array
An array of content parts with a defined type. Supported options differ based on the model being used to generate the response. Can contain text inputs.


Hide properties
type
string

Required
The type of the content part.

text
string

Required
The text content.

audio
object or null

Optional
Parameters for audio output. Required when audio output is requested with modalities: ["audio"]. Learn more.


Hide properties
voice
string

Required
The voice the model uses to respond. Supported voices are ash, ballad, coral, sage, and verse (also supported but not recommended are alloy, echo, and shimmer; these voices are less expressive).

format
string

Required
Specifies the output audio format. Must be one of wav, mp3, flac, opus, or pcm16.

presence_penalty
number or null

Optional
Defaults to 0
Number between -2.0 and 2.0. Positive values penalize new tokens based on whether they appear in the text so far, increasing the model's likelihood to talk about new topics.

response_format
object

Optional
An object specifying the format that the model must output.

Setting to { "type": "json_schema", "json_schema": {...} } enables Structured Outputs which ensures the model will match your supplied JSON schema. Learn more in the Structured Outputs guide.

Setting to { "type": "json_object" } enables JSON mode, which ensures the message the model generates is valid JSON.

Important: when using JSON mode, you must also instruct the model to produce JSON yourself via a system or user message. Without this, the model may generate an unending stream of whitespace until the generation reaches the token limit, resulting in a long-running and seemingly "stuck" request. Also note that the message content may be partially cut off if finish_reason="length", which indicates the generation exceeded max_tokens or the conversation exceeded the max context length.


Hide possible types
object

Hide properties
type
string

Required
The type of response format being defined: text

object

Hide properties
type
string

Required
The type of response format being defined: json_object

object

Hide properties
type
string

Required
The type of response format being defined: json_schema

json_schema
object

Required

Hide properties
description
string

Optional
A description of what the response format is for, used by the model to determine how to respond in the format.

name
string

Required
The name of the response format. Must be a-z, A-Z, 0-9, or contain underscores and dashes, with a maximum length of 64.

schema
object

Optional
The schema for the response format, described as a JSON Schema object.

strict
boolean or null

Optional
Defaults to false
Whether to enable strict schema adherence when generating the output. If set to true, the model will always follow the exact schema defined in the schema field. Only a subset of JSON Schema is supported when strict is true. To learn more, read the Structured Outputs guide.

seed
integer or null

Optional
This feature is in Beta. If specified, our system will make a best effort to sample deterministically, such that repeated requests with the same seed and parameters should return the same result. Determinism is not guaranteed, and you should refer to the system_fingerprint response parameter to monitor changes in the backend.

service_tier
string or null

Optional
Defaults to auto
Specifies the latency tier to use for processing the request. This parameter is relevant for customers subscribed to the scale tier service:

If set to 'auto', and the Project is Scale tier enabled, the system will utilize scale tier credits until they are exhausted.
If set to 'auto', and the Project is not Scale tier enabled, the request will be processed using the default service tier with a lower uptime SLA and no latency guarentee.
If set to 'default', the request will be processed using the default service tier with a lower uptime SLA and no latency guarentee.
When not set, the default behavior is 'auto'.
When this parameter is set, the response body will include the service_tier utilized.

stop
string / array / null

Optional
Defaults to null
Up to 4 sequences where the API will stop generating further tokens.

stream
boolean or null

Optional
Defaults to false
If set, partial message deltas will be sent, like in ChatGPT. Tokens will be sent as data-only server-sent events as they become available, with the stream terminated by a data: [DONE] message. Example Python code.

stream_options
object or null

Optional
Defaults to null
Options for streaming response. Only set this when you set stream: true.


Show properties
temperature
number or null

Optional
Defaults to 1
What sampling temperature to use, between 0 and 2. Higher values like 0.8 will make the output more random, while lower values like 0.2 will make it more focused and deterministic. We generally recommend altering this or top_p but not both.

top_p
number or null

Optional
Defaults to 1
An alternative to sampling with temperature, called nucleus sampling, where the model considers the results of the tokens with top_p probability mass. So 0.1 means only the tokens comprising the top 10% probability mass are considered.

We generally recommend altering this or temperature but not both.

tools
array

Optional
A list of tools the model may call. Currently, only functions are supported as a tool. Use this to provide a list of functions the model may generate JSON inputs for. A max of 128 functions are supported.


Show properties
tool_choice
string or object

Optional
Controls which (if any) tool is called by the model. none means the model will not call any tool and instead generates a message. auto means the model can pick between generating a message or calling one or more tools. required means the model must call one or more tools. Specifying a particular tool via {"type": "function", "function": {"name": "my_function"}} forces the model to call that tool.

none is the default when no tools are present. auto is the default if tools are present.


Hide possible types
string
none means the model will not call any tool and instead generates a message. auto means the model can pick between generating a message or calling one or more tools. required means the model must call one or more tools.

object
Specifies a tool the model should use. Use to force the model to call a specific function.


Hide properties
type
string

Required
The type of the tool. Currently, only function is supported.

function
object

Required

Hide properties
name
string

Required
The name of the function to call.

parallel_tool_calls
boolean

Optional
Defaults to true
Whether to enable parallel function calling during tool use.

user
string

Optional
A unique identifier representing your end-user, which can help OpenAI to monitor and detect abuse. Learn more.

function_call
Deprecated
string or object

Optional
Deprecated in favor of tool_choice.

Controls which (if any) function is called by the model.

none means the model will not call a function and instead generates a message.

auto means the model can pick between generating a message or calling a function.

Specifying a particular function via {"name": "my_function"} forces the model to call that function.

none is the default when no functions are present. auto is the default if functions are present.


Hide possible types
string
none means the model will not call a function and instead generates a message. auto means the model can pick between generating a message or calling a function.

object
Specifying a particular function via {"name": "my_function"} forces the model to call that function.


Hide properties
name
string

Required
The name of the function to call.

functions
Deprecated
array

Optional
Deprecated in favor of tools.

A list of functions the model may generate JSON inputs for.


Hide properties
description
string

Optional
A description of what the function does, used by the model to choose when and how to call the function.

name
string

Required
The name of the function to be called. Must be a-z, A-Z, 0-9, or contain underscores and dashes, with a maximum length of 64.

parameters
object

Optional
The parameters the functions accepts, described as a JSON Schema object. See the guide for examples, and the JSON Schema reference for documentation about the format.

Omitting parameters defines a function with an empty parameter list.

Returns
Returns a chat completion object, or a streamed sequence of chat completion chunk objects if the request is streamed.


Default

Image input

Streaming

Functions

Logprobs
Example request

curl https://api.openai.com/v1/chat/completions \
  -H "Content-Type: application/json" \
  -H "Authorization: Bearer $OPENAI_API_KEY" \
  -d '{
    "model": "gpt-4o",
    "messages": [
      {
        "role": "developer",
        "content": "You are a helpful assistant."
      },
      {
        "role": "user",
        "content": "Hello!"
      }
    ]
  }'
Response

{
  "id": "chatcmpl-123",
  "object": "chat.completion",
  "created": 1677652288,
  "model": "gpt-4o-mini",
  "system_fingerprint": "fp_44709d6fcb",
  "choices": [{
    "index": 0,
    "message": {
      "role": "assistant",
      "content": "\n\nHello there, how may I assist you today?",
    },
    "logprobs": null,
    "finish_reason": "stop"
  }],
  "usage": {
    "prompt_tokens": 9,
    "completion_tokens": 12,
    "total_tokens": 21,
    "completion_tokens_details": {
      "reasoning_tokens": 0,
      "accepted_prediction_tokens": 0,
      "rejected_prediction_tokens": 0
    }
  }
}
The chat completion object
Represents a chat completion response returned by model, based on the provided input.

id
string

A unique identifier for the chat completion.

choices
array

A list of chat completion choices. Can be more than one if n is greater than 1.


Hide properties
finish_reason
string

The reason the model stopped generating tokens. This will be stop if the model hit a natural stop point or a provided stop sequence, length if the maximum number of tokens specified in the request was reached, content_filter if content was omitted due to a flag from our content filters, tool_calls if the model called a tool, or function_call (deprecated) if the model called a function.

index
integer

The index of the choice in the list of choices.

message
object

A chat completion message generated by the model.


Hide properties
content
string or null

The contents of the message.

refusal
string or null

The refusal message generated by the model.

tool_calls
array

The tool calls generated by the model, such as function calls.


Hide properties
id
string

The ID of the tool call.

type
string

The type of the tool. Currently, only function is supported.

function
object

The function that the model called.


Hide properties
name
string

The name of the function to call.

arguments
string

The arguments to call the function with, as generated by the model in JSON format. Note that the model does not always generate valid JSON, and may hallucinate parameters not defined by your function schema. Validate the arguments in your code before calling your function.

role
string

The role of the author of this message.

function_call
Deprecated
object

Deprecated and replaced by tool_calls. The name and arguments of a function that should be called, as generated by the model.


Hide properties
arguments
string

The arguments to call the function with, as generated by the model in JSON format. Note that the model does not always generate valid JSON, and may hallucinate parameters not defined by your function schema. Validate the arguments in your code before calling your function.

name
string

The name of the function to call.

audio
object or null

If the audio output modality is requested, this object contains data about the audio response from the model. Learn more.


Hide properties
id
string

Unique identifier for this audio response.

expires_at
integer

The Unix timestamp (in seconds) for when this audio response will no longer be accessible on the server for use in multi-turn conversations.

data
string

Base64 encoded audio bytes generated by the model, in the format specified in the request.

transcript
string

Transcript of the audio generated by the model.

logprobs
object or null

Log probability information for the choice.


Hide properties
content
array or null

A list of message content tokens with log probability information.


Hide properties
token
string

The token.

logprob
number

The log probability of this token, if it is within the top 20 most likely tokens. Otherwise, the value -9999.0 is used to signify that the token is very unlikely.

bytes
array or null

A list of integers representing the UTF-8 bytes representation of the token. Useful in instances where characters are represented by multiple tokens and their byte representations must be combined to generate the correct text representation. Can be null if there is no bytes representation for the token.

top_logprobs
array

List of the most likely tokens and their log probability, at this token position. In rare cases, there may be fewer than the number of requested top_logprobs returned.


Hide properties
token
string

The token.

logprob
number

The log probability of this token, if it is within the top 20 most likely tokens. Otherwise, the value -9999.0 is used to signify that the token is very unlikely.

bytes
array or null

A list of integers representing the UTF-8 bytes representation of the token. Useful in instances where characters are represented by multiple tokens and their byte representations must be combined to generate the correct text representation. Can be null if there is no bytes representation for the token.

refusal
array or null

A list of message refusal tokens with log probability information.


Hide properties
token
string

The token.

logprob
number

The log probability of this token, if it is within the top 20 most likely tokens. Otherwise, the value -9999.0 is used to signify that the token is very unlikely.

bytes
array or null

A list of integers representing the UTF-8 bytes representation of the token. Useful in instances where characters are represented by multiple tokens and their byte representations must be combined to generate the correct text representation. Can be null if there is no bytes representation for the token.

top_logprobs
array

List of the most likely tokens and their log probability, at this token position. In rare cases, there may be fewer than the number of requested top_logprobs returned.


Hide properties
token
string

The token.

logprob
number

The log probability of this token, if it is within the top 20 most likely tokens. Otherwise, the value -9999.0 is used to signify that the token is very unlikely.

bytes
array or null

A list of integers representing the UTF-8 bytes representation of the token. Useful in instances where characters are represented by multiple tokens and their byte representations must be combined to generate the correct text representation. Can be null if there is no bytes representation for the token.

created
integer

The Unix timestamp (in seconds) of when the chat completion was created.

model
string

The model used for the chat completion.

service_tier
string or null

The service tier used for processing the request. This field is only included if the service_tier parameter is specified in the request.

system_fingerprint
string

This fingerprint represents the backend configuration that the model runs with.

Can be used in conjunction with the seed request parameter to understand when backend changes have been made that might impact determinism.

object
string

The object type, which is always chat.completion.

usage
object

Usage statistics for the completion request.


Hide properties
completion_tokens
integer

Number of tokens in the generated completion.

prompt_tokens
integer

Number of tokens in the prompt.

total_tokens
integer

Total number of tokens used in the request (prompt + completion).

completion_tokens_details
object

Breakdown of tokens used in a completion.


Hide properties
accepted_prediction_tokens
integer

When using Predicted Outputs, the number of tokens in the prediction that appeared in the completion.

audio_tokens
integer

Audio input tokens generated by the model.

reasoning_tokens
integer

Tokens generated by the model for reasoning.

rejected_prediction_tokens
integer

When using Predicted Outputs, the number of tokens in the prediction that did not appear in the completion. However, like reasoning tokens, these tokens are still counted in the total completion tokens for purposes of billing, output, and context window limits.

prompt_tokens_details
object

Breakdown of tokens used in the prompt.


Hide properties
audio_tokens
integer

Audio input tokens present in the prompt.

cached_tokens
integer

Cached tokens present in the prompt.

OBJECT The chat completion object

{
  "id": "chatcmpl-123456",
  "object": "chat.completion",
  "created": 1728933352,
  "model": "gpt-4o-2024-08-06",
  "choices": [
    {
      "index": 0,
      "message": {
        "role": "assistant",
        "content": "Hi there! How can I assist you today?",
        "refusal": null
      },
      "logprobs": null,
      "finish_reason": "stop"
    }
  ],
  "usage": {
    "prompt_tokens": 19,
    "completion_tokens": 10,
    "total_tokens": 29,
    "prompt_tokens_details": {
      "cached_tokens": 0
    },
    "completion_tokens_details": {
      "reasoning_tokens": 0,
      "accepted_prediction_tokens": 0,
      "rejected_prediction_tokens": 0
    }
  },
  "system_fingerprint": "fp_6b68a8204b"
}
The chat completion chunk object
Represents a streamed chunk of a chat completion response returned by model, based on the provided input.

id
string

A unique identifier for the chat completion. Each chunk has the same ID.

choices
array

A list of chat completion choices. Can contain more than one elements if n is greater than 1. Can also be empty for the last chunk if you set stream_options: {"include_usage": true}.


Hide properties
delta
object

A chat completion delta generated by streamed model responses.


Hide properties
content
string or null

The contents of the chunk message.

function_call
Deprecated
object

Deprecated and replaced by tool_calls. The name and arguments of a function that should be called, as generated by the model.


Hide properties
arguments
string

The arguments to call the function with, as generated by the model in JSON format. Note that the model does not always generate valid JSON, and may hallucinate parameters not defined by your function schema. Validate the arguments in your code before calling your function.

name
string

The name of the function to call.

tool_calls
array


Hide properties
index
integer

id
string

The ID of the tool call.

type
string

The type of the tool. Currently, only function is supported.

function
object


Hide properties
name
string

The name of the function to call.

arguments
string

The arguments to call the function with, as generated by the model in JSON format. Note that the model does not always generate valid JSON, and may hallucinate parameters not defined by your function schema. Validate the arguments in your code before calling your function.

role
string

The role of the author of this message.

refusal
string or null

The refusal message generated by the model.

logprobs
object or null

Log probability information for the choice.


Hide properties
content
array or null

A list of message content tokens with log probability information.


Hide properties
token
string

The token.

logprob
number

The log probability of this token, if it is within the top 20 most likely tokens. Otherwise, the value -9999.0 is used to signify that the token is very unlikely.

bytes
array or null

A list of integers representing the UTF-8 bytes representation of the token. Useful in instances where characters are represented by multiple tokens and their byte representations must be combined to generate the correct text representation. Can be null if there is no bytes representation for the token.

top_logprobs
array

List of the most likely tokens and their log probability, at this token position. In rare cases, there may be fewer than the number of requested top_logprobs returned.


Hide properties
token
string

The token.

logprob
number

The log probability of this token, if it is within the top 20 most likely tokens. Otherwise, the value -9999.0 is used to signify that the token is very unlikely.

bytes
array or null

A list of integers representing the UTF-8 bytes representation of the token. Useful in instances where characters are represented by multiple tokens and their byte representations must be combined to generate the correct text representation. Can be null if there is no bytes representation for the token.

refusal
array or null

A list of message refusal tokens with log probability information.


Hide properties
token
string

The token.

logprob
number

The log probability of this token, if it is within the top 20 most likely tokens. Otherwise, the value -9999.0 is used to signify that the token is very unlikely.

bytes
array or null

A list of integers representing the UTF-8 bytes representation of the token. Useful in instances where characters are represented by multiple tokens and their byte representations must be combined to generate the correct text representation. Can be null if there is no bytes representation for the token.

top_logprobs
array

List of the most likely tokens and their log probability, at this token position. In rare cases, there may be fewer than the number of requested top_logprobs returned.


Hide properties
token
string

The token.

logprob
number

The log probability of this token, if it is within the top 20 most likely tokens. Otherwise, the value -9999.0 is used to signify that the token is very unlikely.

bytes
array or null

A list of integers representing the UTF-8 bytes representation of the token. Useful in instances where characters are represented by multiple tokens and their byte representations must be combined to generate the correct text representation. Can be null if there is no bytes representation for the token.

finish_reason
string or null

The reason the model stopped generating tokens. This will be stop if the model hit a natural stop point or a provided stop sequence, length if the maximum number of tokens specified in the request was reached, content_filter if content was omitted due to a flag from our content filters, tool_calls if the model called a tool, or function_call (deprecated) if the model called a function.

index
integer

The index of the choice in the list of choices.

created
integer

The Unix timestamp (in seconds) of when the chat completion was created. Each chunk has the same timestamp.

model
string

The model to generate the completion.

service_tier
string or null

The service tier used for processing the request. This field is only included if the service_tier parameter is specified in the request.

system_fingerprint
string

This fingerprint represents the backend configuration that the model runs with. Can be used in conjunction with the seed request parameter to understand when backend changes have been made that might impact determinism.

object
string

The object type, which is always chat.completion.chunk.

usage
object or null

An optional field that will only be present when you set stream_options: {"include_usage": true} in your request. When present, it contains a null value except for the last chunk which contains the token usage statistics for the entire request.


Hide properties
completion_tokens
integer

Number of tokens in the generated completion.

prompt_tokens
integer

Number of tokens in the prompt.

total_tokens
integer

Total number of tokens used in the request (prompt + completion).