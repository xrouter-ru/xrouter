Foundation Models Text Generation API, REST: Tokenizer
Written by

Yandex Cloud
Updated at October 17, 2024
Service for tokenizing input content.

Methods
Method

Description

Tokenize

RPC method for tokenizing text.

TokenizeCompletion

RPC method for tokenizing content of CompletionRequest


Foundation Models Text Generation API, REST: Tokenizer.Tokenize
Written by

Yandex Cloud
Updated at November 26, 2024
RPC method for tokenizing text.

HTTP request
POST https://llm.api.cloud.yandex.net/foundationModels/v1/tokenize

Body parameters
{
  "modelUri": "string",
  "text": "string"
}

Request for the service to tokenize input text.

Field

Description

modelUri

string

The identifier of the model to be used for tokenization.

text

string

Text to be tokenized.

Response
HTTP Code: 200 - OK

{
  "tokens": [
    {
      "id": "string",
      "text": "string",
      "special": "boolean"
    }
  ],
  "modelVersion": "string"
}

Response containing tokenized content from request.

Field

Description

tokens[]

Token

A list of tokens obtained from tokenization.

modelVersion

string

Model version (changes with model releases).

Token
Represents a token, the basic unit of content, used by the foundation model.

Field

Description

id

string (int64)

An internal token identifier.

text

string

The textual representation of the token.

special

boolean

Indicates whether the token is special or not. Special tokens may define the model's behavior and are not visible to users.

Foundation Models Text Generation API, REST: Tokenizer.TokenizeCompletion
Written by

Yandex Cloud
Updated at November 26, 2024
RPC method for tokenizing content of CompletionRequest

HTTP request
POST https://llm.api.cloud.yandex.net/foundationModels/v1/tokenizeCompletion

Body parameters
{
  "modelUri": "string",
  "completionOptions": {
    "stream": "boolean",
    "temperature": "number",
    "maxTokens": "string"
  },
  "messages": [
    {
      "role": "string",
      // Includes only one of the fields `text`, `toolCallList`, `toolResultList`
      "text": "string",
      "toolCallList": {
        "toolCalls": [
          {
            // Includes only one of the fields `functionCall`
            "functionCall": {
              "name": "string",
              "arguments": "object"
            }
            // end of the list of possible fields
          }
        ]
      },
      "toolResultList": {
        "toolResults": [
          {
            // Includes only one of the fields `functionResult`
            "functionResult": {
              "name": "string",
              // Includes only one of the fields `content`
              "content": "string"
              // end of the list of possible fields
            }
            // end of the list of possible fields
          }
        ]
      }
      // end of the list of possible fields
    }
  ],
  "tools": [
    {
      // Includes only one of the fields `function`
      "function": {
        "name": "string",
        "description": "string",
        "parameters": "object"
      }
      // end of the list of possible fields
    }
  ]
}

Request for the service to generate text completion.

Field

Description

modelUri

string

The ID of the model to be used for completion generation.

completionOptions

CompletionOptions

Configuration options for completion generation.

messages[]

Message

A list of messages representing the context for the completion model.

tools[]

Tool

List of tools that are available for the model to invoke during the completion generation.
Note: This parameter is not yet supported and will be ignored if provided.

CompletionOptions
Defines the options for completion generation.

Field

Description

stream

boolean

Enables streaming of partially generated text.

temperature

number (double)

Affects creativity and randomness of responses. Should be a double number between 0 (inclusive) and 1 (inclusive).
Lower values produce more straightforward responses while higher values lead to increased creativity and randomness.
Default temperature: 0.3

maxTokens

string (int64)

The limit on the number of tokens used for single completion generation.
Must be greater than zero. This maximum allowed parameter value may depend on the model being used.

Message
A message object representing a wrapper over the inputs and outputs of the completion model.

Field

Description

role

string

The ID of the message sender. Supported roles:

system: Special role used to define the behaviour of the completion model.
assistant: A role used by the model to generate responses.
user: A role used by the user to describe requests to the model.
text

string

Textual content of the message.

Includes only one of the fields text, toolCallList, toolResultList.

Message content.

toolCallList

ToolCallList

List of tool calls made by the model as part of the response generation.

Includes only one of the fields text, toolCallList, toolResultList.

Message content.

toolResultList

ToolResultList

List of tool results returned from external tools that were invoked by the model.

Includes only one of the fields text, toolCallList, toolResultList.

Message content.

ToolCallList
Represents a list of tool calls.

Field

Description

toolCalls[]

ToolCall

A list of tool calls to be executed.

ToolCall
Represents a call to a tool.

Field

Description

functionCall

FunctionCall

Represents a call to a function.

Includes only one of the fields functionCall.

FunctionCall
Represents the invocation of a function with specific arguments.

Field

Description

name

string

The name of the function being called.

arguments

object

The structured arguments passed to the function.
These arguments must adhere to the JSON Schema defined in the corresponding function's parameters.

ToolResultList
Represents a list of tool results.

Field

Description

toolResults[]

ToolResult

A list of tool results.

ToolResult
Represents the result of a tool call.

Field

Description

functionResult

FunctionResult

Represents the result of a function call.

Includes only one of the fields functionResult.

FunctionResult
Represents the result of a function call.

Field

Description

name

string

The name of the function that was executed.

content

string

The result of the function call, represented as a string.
This field can be used to store the output of the function.

Includes only one of the fields content.

Tool
Represents a tool that can be invoked during completion generation.

Field

Description

function

FunctionTool

Represents a function that can be called.

Includes only one of the fields function.

FunctionTool
Represents a function tool that can be invoked during completion generation.

Field

Description

name

string

The name of the function.

description

string

A description of the function's purpose or behavior.

parameters

object

A JSON Schema that defines the expected parameters for the function.
The schema should describe the required fields, their types, and any constraints or default values.

Response
HTTP Code: 200 - OK

{
  "tokens": [
    {
      "id": "string",
      "text": "string",
      "special": "boolean"
    }
  ],
  "modelVersion": "string"
}

Response containing tokenized content from request.

Field

Description

tokens[]

Token

A list of tokens obtained from tokenization.

modelVersion

string

Model version (changes with model releases).

Token
Represents a token, the basic unit of content, used by the foundation model.

Field

Description

id

string (int64)

An internal token identifier.

text

string

The textual representation of the token.

special

boolean

Indicates whether the token is special or not. Special tokens may define the model's behavior and are not visible to users.
